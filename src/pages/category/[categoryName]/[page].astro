---
import type { GetStaticPaths } from "astro";
import BlogLayout from "../../../layouts/BlogLayout.astro";
import Pagination from "../../../components/Pagination.astro";
import { getArticles, getCategories } from "../../../libs/microcms";
import type { GetStaticPathsOptions } from "astro";
import { DOMAIN, SITE_NAME, QUERY_MAX_ENTRY_COUNT } from "../../../const"

export async function getStaticPaths( {paginate}: GetStaticPathsOptions) {
    const categoriesApiResponse = await getCategories({ limit: QUERY_MAX_ENTRY_COUNT });
    const categories = categoriesApiResponse.contents;

    const articlesApiResponse = await getArticles({ limit: QUERY_MAX_ENTRY_COUNT });
    const articles = articlesApiResponse.contents;

    return categories.flatMap((category) => {
        const categoryArticles = articles.filter((article) => 
            article.category.id === category.id
        );
        return paginate(categoryArticles, {
            params: { categoryName: category.name },
            pageSize: 10
        })
    });

}
const { page } = Astro.props
const { categoryName } = Astro.params
const categoryArticles = page.data
const categoriesApiResponse = await getCategories({ limit: 100 });
const categories = categoriesApiResponse.contents;

const categoryOfThisPage = categories.find((category) => category.name === categoryName)

---
<BlogLayout 
  pageTitle=`${categoryOfThisPage?.name} | ${SITE_NAME}`
  articles={categoryArticles}
  description=`${SITE_NAME}の${categoryOfThisPage?.name}カテゴリの記事一覧です`
  image={"https://hito-horobe.net/ogp-index.jpg"}
  url={`https://${DOMAIN}/category/${categoryName}/${page.currentPage}`}
>
    <Pagination page={page} />
</BlogLayout>
